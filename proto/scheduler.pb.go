// scheduler.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/scheduler.proto

package scheduler

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum to represent the possible states of a job.
type JobStatus int32

const (
	JobStatus_UNKNOWN   JobStatus = 0
	JobStatus_PENDING   JobStatus = 1
	JobStatus_RUNNING   JobStatus = 2
	JobStatus_COMPLETED JobStatus = 3
	JobStatus_FAILED    JobStatus = 4
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETED",
		4: "FAILED",
	}
	JobStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"PENDING":   1,
		"RUNNING":   2,
		"COMPLETED": 3,
		"FAILED":    4,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scheduler_proto_enumTypes[0].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_proto_scheduler_proto_enumTypes[0]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{0}
}

// Enum to represent the state of a worker node.
type WorkerStatus int32

const (
	WorkerStatus_WORKER_UNKNOWN WorkerStatus = 0
	WorkerStatus_IDLE           WorkerStatus = 1
	WorkerStatus_BUSY           WorkerStatus = 2
)

// Enum value maps for WorkerStatus.
var (
	WorkerStatus_name = map[int32]string{
		0: "WORKER_UNKNOWN",
		1: "IDLE",
		2: "BUSY",
	}
	WorkerStatus_value = map[string]int32{
		"WORKER_UNKNOWN": 0,
		"IDLE":           1,
		"BUSY":           2,
	}
)

func (x WorkerStatus) Enum() *WorkerStatus {
	p := new(WorkerStatus)
	*p = x
	return p
}

func (x WorkerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scheduler_proto_enumTypes[1].Descriptor()
}

func (WorkerStatus) Type() protoreflect.EnumType {
	return &file_proto_scheduler_proto_enumTypes[1]
}

func (x WorkerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerStatus.Descriptor instead.
func (WorkerStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{1}
}

// The primary Job message.
type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Status        JobStatus              `protobuf:"varint,3,opt,name=status,proto3,enum=scheduler.JobStatus" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Output        string                 `protobuf:"bytes,7,opt,name=output,proto3" json:"output,omitempty"` // To store stdout/stderr from the job execution
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_proto_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Job) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_UNKNOWN
}

func (x *Job) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Job) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Job) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *Job) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

// RegisterWorker
type RegisterWorkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"` // A unique ID for the worker (e.g., hostname:port)
	Capacity      int32                  `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`                // How many concurrent jobs this worker can run
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerRequest) Reset() {
	*x = RegisterWorkerRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerRequest) ProtoMessage() {}

func (x *RegisterWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkerRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterWorkerRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *RegisterWorkerRequest) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type RegisterWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Registered    bool                   `protobuf:"varint,1,opt,name=registered,proto3" json:"registered,omitempty"`
	MasterId      string                 `protobuf:"bytes,2,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"` // The ID of the master that handled the request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterWorkerResponse) GetRegistered() bool {
	if x != nil {
		return x.Registered
	}
	return false
}

func (x *RegisterWorkerResponse) GetMasterId() string {
	if x != nil {
		return x.MasterId
	}
	return ""
}

// SendHeartbeat
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Status        WorkerStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=scheduler.WorkerStatus" json:"status,omitempty"`
	RunningJobs   int32                  `protobuf:"varint,3,opt,name=running_jobs,json=runningJobs,proto3" json:"running_jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *HeartbeatRequest) GetStatus() WorkerStatus {
	if x != nil {
		return x.Status
	}
	return WorkerStatus_WORKER_UNKNOWN
}

func (x *HeartbeatRequest) GetRunningJobs() int32 {
	if x != nil {
		return x.RunningJobs
	}
	return 0
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acknowledged  bool                   `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

// SubmitJob
type SubmitJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"` // The shell command to execute
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitJobRequest) Reset() {
	*x = SubmitJobRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitJobRequest) ProtoMessage() {}

func (x *SubmitJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitJobRequest.ProtoReflect.Descriptor instead.
func (*SubmitJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitJobRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type SubmitJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // The ID assigned to the newly created job
	Status        JobStatus              `protobuf:"varint,2,opt,name=status,proto3,enum=scheduler.JobStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitJobResponse) Reset() {
	*x = SubmitJobResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitJobResponse) ProtoMessage() {}

func (x *SubmitJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitJobResponse.ProtoReflect.Descriptor instead.
func (*SubmitJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitJobResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *SubmitJobResponse) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_UNKNOWN
}

// UpdateJobStatus
type UpdateJobStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      string                 `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	NewStatus     JobStatus              `protobuf:"varint,3,opt,name=new_status,json=newStatus,proto3,enum=scheduler.JobStatus" json:"new_status,omitempty"`
	Output        string                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"` // Any output from the job
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobStatusRequest) Reset() {
	*x = UpdateJobStatusRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobStatusRequest) ProtoMessage() {}

func (x *UpdateJobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateJobStatusRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *UpdateJobStatusRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *UpdateJobStatusRequest) GetNewStatus() JobStatus {
	if x != nil {
		return x.NewStatus
	}
	return JobStatus_UNKNOWN
}

func (x *UpdateJobStatusRequest) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type UpdateJobStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acknowledged  bool                   `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobStatusResponse) Reset() {
	*x = UpdateJobStatusResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobStatusResponse) ProtoMessage() {}

func (x *UpdateJobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateJobStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateJobStatusResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

// ExecuteJob
type ExecuteJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobToRun      *Job                   `protobuf:"bytes,1,opt,name=job_to_run,json=jobToRun,proto3" json:"job_to_run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteJobRequest) Reset() {
	*x = ExecuteJobRequest{}
	mi := &file_proto_scheduler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteJobRequest) ProtoMessage() {}

func (x *ExecuteJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteJobRequest.ProtoReflect.Descriptor instead.
func (*ExecuteJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{9}
}

func (x *ExecuteJobRequest) GetJobToRun() *Job {
	if x != nil {
		return x.JobToRun
	}
	return nil
}

type ExecuteJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"` // Did the worker accept the job?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteJobResponse) Reset() {
	*x = ExecuteJobResponse{}
	mi := &file_proto_scheduler_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteJobResponse) ProtoMessage() {}

func (x *ExecuteJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scheduler_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteJobResponse.ProtoReflect.Descriptor instead.
func (*ExecuteJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_scheduler_proto_rawDescGZIP(), []int{10}
}

func (x *ExecuteJobResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

var File_proto_scheduler_proto protoreflect.FileDescriptor

const file_proto_scheduler_proto_rawDesc = "" +
	"\n" +
	"\x15proto/scheduler.proto\x12\tscheduler\x1a\x1fgoogle/protobuf/timestamp.proto\"\xaa\x02\n" +
	"\x03Job\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12,\n" +
	"\x06status\x18\x03 \x01(\x0e2\x14.scheduler.JobStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"started_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x16\n" +
	"\x06output\x18\a \x01(\tR\x06output\"P\n" +
	"\x15RegisterWorkerRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x1a\n" +
	"\bcapacity\x18\x02 \x01(\x05R\bcapacity\"U\n" +
	"\x16RegisterWorkerResponse\x12\x1e\n" +
	"\n" +
	"registered\x18\x01 \x01(\bR\n" +
	"registered\x12\x1b\n" +
	"\tmaster_id\x18\x02 \x01(\tR\bmasterId\"\x83\x01\n" +
	"\x10HeartbeatRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12/\n" +
	"\x06status\x18\x02 \x01(\x0e2\x17.scheduler.WorkerStatusR\x06status\x12!\n" +
	"\frunning_jobs\x18\x03 \x01(\x05R\vrunningJobs\"7\n" +
	"\x11HeartbeatResponse\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\",\n" +
	"\x10SubmitJobRequest\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\"X\n" +
	"\x11SubmitJobResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12,\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.scheduler.JobStatusR\x06status\"\x99\x01\n" +
	"\x16UpdateJobStatusRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\tR\bworkerId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x123\n" +
	"\n" +
	"new_status\x18\x03 \x01(\x0e2\x14.scheduler.JobStatusR\tnewStatus\x12\x16\n" +
	"\x06output\x18\x04 \x01(\tR\x06output\"=\n" +
	"\x17UpdateJobStatusResponse\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\"A\n" +
	"\x11ExecuteJobRequest\x12,\n" +
	"\n" +
	"job_to_run\x18\x01 \x01(\v2\x0e.scheduler.JobR\bjobToRun\"0\n" +
	"\x12ExecuteJobResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted*M\n" +
	"\tJobStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\r\n" +
	"\tCOMPLETED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04*6\n" +
	"\fWorkerStatus\x12\x12\n" +
	"\x0eWORKER_UNKNOWN\x10\x00\x12\b\n" +
	"\x04IDLE\x10\x01\x12\b\n" +
	"\x04BUSY\x10\x022\xd0\x02\n" +
	"\tScheduler\x12U\n" +
	"\x0eRegisterWorker\x12 .scheduler.RegisterWorkerRequest\x1a!.scheduler.RegisterWorkerResponse\x12J\n" +
	"\rSendHeartbeat\x12\x1b.scheduler.HeartbeatRequest\x1a\x1c.scheduler.HeartbeatResponse\x12F\n" +
	"\tSubmitJob\x12\x1b.scheduler.SubmitJobRequest\x1a\x1c.scheduler.SubmitJobResponse\x12X\n" +
	"\x0fUpdateJobStatus\x12!.scheduler.UpdateJobStatusRequest\x1a\".scheduler.UpdateJobStatusResponse2S\n" +
	"\x06Worker\x12I\n" +
	"\n" +
	"ExecuteJob\x12\x1c.scheduler.ExecuteJobRequest\x1a\x1d.scheduler.ExecuteJobResponseB\rZ\v.;schedulerb\x06proto3"

var (
	file_proto_scheduler_proto_rawDescOnce sync.Once
	file_proto_scheduler_proto_rawDescData []byte
)

func file_proto_scheduler_proto_rawDescGZIP() []byte {
	file_proto_scheduler_proto_rawDescOnce.Do(func() {
		file_proto_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scheduler_proto_rawDesc), len(file_proto_scheduler_proto_rawDesc)))
	})
	return file_proto_scheduler_proto_rawDescData
}

var file_proto_scheduler_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_scheduler_proto_goTypes = []any{
	(JobStatus)(0),                  // 0: scheduler.JobStatus
	(WorkerStatus)(0),               // 1: scheduler.WorkerStatus
	(*Job)(nil),                     // 2: scheduler.Job
	(*RegisterWorkerRequest)(nil),   // 3: scheduler.RegisterWorkerRequest
	(*RegisterWorkerResponse)(nil),  // 4: scheduler.RegisterWorkerResponse
	(*HeartbeatRequest)(nil),        // 5: scheduler.HeartbeatRequest
	(*HeartbeatResponse)(nil),       // 6: scheduler.HeartbeatResponse
	(*SubmitJobRequest)(nil),        // 7: scheduler.SubmitJobRequest
	(*SubmitJobResponse)(nil),       // 8: scheduler.SubmitJobResponse
	(*UpdateJobStatusRequest)(nil),  // 9: scheduler.UpdateJobStatusRequest
	(*UpdateJobStatusResponse)(nil), // 10: scheduler.UpdateJobStatusResponse
	(*ExecuteJobRequest)(nil),       // 11: scheduler.ExecuteJobRequest
	(*ExecuteJobResponse)(nil),      // 12: scheduler.ExecuteJobResponse
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
}
var file_proto_scheduler_proto_depIdxs = []int32{
	0,  // 0: scheduler.Job.status:type_name -> scheduler.JobStatus
	13, // 1: scheduler.Job.created_at:type_name -> google.protobuf.Timestamp
	13, // 2: scheduler.Job.started_at:type_name -> google.protobuf.Timestamp
	13, // 3: scheduler.Job.completed_at:type_name -> google.protobuf.Timestamp
	1,  // 4: scheduler.HeartbeatRequest.status:type_name -> scheduler.WorkerStatus
	0,  // 5: scheduler.SubmitJobResponse.status:type_name -> scheduler.JobStatus
	0,  // 6: scheduler.UpdateJobStatusRequest.new_status:type_name -> scheduler.JobStatus
	2,  // 7: scheduler.ExecuteJobRequest.job_to_run:type_name -> scheduler.Job
	3,  // 8: scheduler.Scheduler.RegisterWorker:input_type -> scheduler.RegisterWorkerRequest
	5,  // 9: scheduler.Scheduler.SendHeartbeat:input_type -> scheduler.HeartbeatRequest
	7,  // 10: scheduler.Scheduler.SubmitJob:input_type -> scheduler.SubmitJobRequest
	9,  // 11: scheduler.Scheduler.UpdateJobStatus:input_type -> scheduler.UpdateJobStatusRequest
	11, // 12: scheduler.Worker.ExecuteJob:input_type -> scheduler.ExecuteJobRequest
	4,  // 13: scheduler.Scheduler.RegisterWorker:output_type -> scheduler.RegisterWorkerResponse
	6,  // 14: scheduler.Scheduler.SendHeartbeat:output_type -> scheduler.HeartbeatResponse
	8,  // 15: scheduler.Scheduler.SubmitJob:output_type -> scheduler.SubmitJobResponse
	10, // 16: scheduler.Scheduler.UpdateJobStatus:output_type -> scheduler.UpdateJobStatusResponse
	12, // 17: scheduler.Worker.ExecuteJob:output_type -> scheduler.ExecuteJobResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_scheduler_proto_init() }
func file_proto_scheduler_proto_init() {
	if File_proto_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scheduler_proto_rawDesc), len(file_proto_scheduler_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_scheduler_proto_goTypes,
		DependencyIndexes: file_proto_scheduler_proto_depIdxs,
		EnumInfos:         file_proto_scheduler_proto_enumTypes,
		MessageInfos:      file_proto_scheduler_proto_msgTypes,
	}.Build()
	File_proto_scheduler_proto = out.File
	file_proto_scheduler_proto_goTypes = nil
	file_proto_scheduler_proto_depIdxs = nil
}
